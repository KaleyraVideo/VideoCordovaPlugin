name: Release Plugin

on:
  workflow_call:
   inputs:
      release_kind:
        type: string
        description: What kind of release do you want to do?
        required: false
        
  workflow_dispatch:
    inputs:
      release_kind:
        type: choice
        description: What kind of release do you want to do?
        required: true
        options: 
        - 
        - patch
        - minor
        - major

jobs:
  release-plugin:
    runs-on: macos-latest
    environment:
      name: release_environment
    defaults:
      run:
        working-directory: ./videoCordovaPlugin
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
            app-id: ${{ vars.APP_ID }}
            private-key: ${{ secrets.PRIVATE_KEY }}
            owner: ${{ github.repository_owner }}
            repositories: VideoCordovaPlugin
      - uses: actions/checkout@v2
        with:
            repository: KaleyraVideo/VideoCordovaPlugin
            path: videoCordovaPlugin
            ref: 'main'
            fetch-depth: 0
            fetch-tags: true
            token: ${{ steps.app-token.outputs.token || secrets.GITHUB_TOKEN }}
      - uses: actions/setup-node@v3
        with:
           node-version: 16

      - name: Setting up environment
        run: |
          pip install pyyaml

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Install Homebrew Bundler RubyGems
        if: steps.cache.outputs.cache-hit != 'true'
        run: brew install git-subrepo

      - name: Update subrepo
        run: |
          git subrepo pull native-bridge -m "chore: update native-bridge"
    
      - name: Install node packages
        run: npm ci
    
      - name: Update package version
        run: npm run ${{ github.event.inputs.release_kind }}
        
      - name: Remove "private" constraint from package.json file
        run: |
          sed -i '' 's/\"private\": true/\"private\": false/g' package.json
          cat package.json
      
      - name: Publish to npm
        run: | 
          npm config set '//registry.npmjs.org/:_authToken' "${{ secrets.NPM_API_KEY }}"
          npm publish
